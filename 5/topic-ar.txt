### السلام عليكم أصدقائي,

* ## فهرس المواضيع السابقة:

  https://macdiscussions.udacity.com/t/topic/86623

* ## ماهو المطلوب؟
  مرة أخرى, أخبرك مدير عملك أنه تعاقد مع بنك آخر, وأنهم أحضروا جهاز صراف آلي جديد (ATM), وأنه يريد (نفس البرنامج) يقوم بعملية السحب للجهازين.

  أيضاً أخبرك أنه يجب عليك أن تظهر رسالة فيها اسم البنك مثلاً:
  ```
  Welcome to Baraka Bank
  ```

  ثم بإمكان المستخدم السحب بالطريقة التي شرحناها سابقاً.
  لكن, **بالتأكيد يوجد رصيد (balance) مختلف في الجهازين** !

* ## كيف سنقوم بها ؟
  بالتأكيد, سنقوم بنسخ الكود مرتين, وتغيير اسم الدالة من withdraw إلى withdraw1 والنسخة الأخرى إلى withdraw2, بحيث يقوم كل جهاز (ATM) بالسحب من دالة مختلفة:

  ```
  def withdraw1(balance, request):
     print("current balance is " + str(balance))
     if request > balance:
        print("You don't have enough money")
     ...


  def withdraw2(balance, request):
     print("current balance is " + str(balance))
     if request > balance:
        print("You don't have enough money")
     ...
  ```

* ## ألم نتفق من قبل على أن النسخ واللصق أمر قبيح, لذا الحل بالأعلى خاطئ ؟
  نعم الحل بالأعلى سيء... لذا بالتأكيد, يوجد حل أفضل من هذ بكثير.

* ## ماذا يجب أن نستعمل ؟

  الإجابة ببساطة, باستعمال الصنف (class).

* ## ماهو الصنف (class) ؟

  ببساطة هو تعريف لنوع جديد... يكون هذا النوع شيء من الواقع, مثلاً بإمكاننا تعريف شخص Person لديه خصائص معينة Name و Age.
  هنا نريد أن نعرف جهاز ATM, لديه رصيد (balance) و اسم البنك (bank name).

* ## كيف يمكنني عمل class ؟

  * ### بداية نحتاج إلى تعريفها:
    ببساطة تقوم بتعريفها بهذا الشكل:
    ```
    class ATM:
    ```

  * ### بعدها نخبر هذا الـ class بما يقوم:
    هل تتذكر دالة الـ withdraw التي كتبناها, قم بوضعها داخل الـ class بهذا الشكل:
    ```
    class ATM:

        def withdraw(self, request):
    ```

    * #### أين ذهب الرصيد balance, ألم تكن الدالة تحتوي على balance في تعريفها ؟

       لا نحتاج أن ندخل الرصيد balance كل مرة, تذكر أننا سنخزن الرصيد داخل الـ class الخاصة بجهاز ATM... بمعنى أنه سيحتفظ بالرصيد, داخل الـ class وسيقوم بالتعديل عليه عند كل عملية سحب.

    * #### ماهو self الذي بالدالة withdraw بالأعلى ؟

      قلنا أننا سنستخدم الرصيد balance من داخل الـ class, ولكن كيف سنحصل عليه بينما نقوم بالسحب withdraw, ببساطة سنحتاج أن نشير إلى الـ class... لذا سنستعمل self لنحصل على العناصر الموجودة داخل الـ class.

      أي أننا سنغير أي متغير balance إلى self.balance بمعنى (الرصيد الذي بداخل جهاز الـ ATM), بهذا الشكل:
      ```
      print("Current balance = " + str(balance))
      ```
      إلى:
      ```
      print("Current balance = " + str(self.balance))
      ```

     * #### كيف سيكون استعمال هذا الـ class ؟

       سيكون الاستعمال بهذا الشكل:
       ```
       atm1.withdraw(277)
       atm1.withdraw(800)
			
       atm2.withdraw(100)
       atm2.withdraw(2000)
       ```

       بحيث atm1 هو جهاز الصراف الآلي الأول, و atm2 هو الجهاز الآخر.

* ### لكن كيف سنقوم بتخزين الرصيد balance واسم البنك bank name ؟

  * #### سيكون الناتج بهذا الشكل:
    ```
    balance1 = 500
    balance2 = 1000
			
    atm1 = ATM(balance1, "Smart Bank")
    atm2 = ATM(balance2, "Baraka Bank")
    ```
    هنا قمنا بتعريف متغيرين atm1 و atm2... أي لدينا جهازين atm.
    الجهاز الأول atm1, رصيده 500 واسم البنك "Smart Bank".
    والجهاز الأول atm2, رصيده 1000 واسم البنك "Baraka Bank".

    ![31%20PM|520x500](image-1.jpeg)

  * #### لكن الـ class يجب أن تحتوي على كود يستقبل هذه البيانات ويخزنها, صحيح ؟

    فعلاً, سنحتاج إلى هذا الكود:
    ```
    class ATM:

        def __init__(self, balance, bank_name):
            self.balance = balance
            self.bank_name = bank_name
    ```

    هنا, __init__ هي اختصار لكلمة initializer (محضر) أي ستقوم بتحضير المتغيرات :smile:

    داخلها نقوم بالاحتفاظ بالرصيد داخل الـ class باستعمال self التي وضحناها بالأعلى:
    ```
    self.balance = balance
    ```

     ثم نقوم بحفظ اسم البنك بنفس الآلية.


* ## هل بإمكاننا عمل عشرة أجهزة atm بهذا الشكل ؟

  نعم بالتأكيد, لأننا اتفقنا ان الاستعمال يجب أن يكون سهل, بمعنى لعمل أكثر من جهاز:
  ```
  atm1 = ATM(500, "Smart Bank")
  atm2 = ATM(1000, "Baraka Bank")
  atm3 = ATM(20000, "Tasleef Bank")

  ...
  atm9 =  ATM(300, "Awesome Bank")
  ```

* ## ماهي المهمة ؟
  * قم بإنشاء class لأجهزة ATM.
  * قم بوضع دالة السحب withdraw, واحذف متغير الرصيد balance من تعريفها (def).
  * قم بالتعديلات اللازمة على متغير الرصيد balance باستعمال self.
  * اكتب المحضّر (initializer) لكي يحفظ الرصيد balance واسم البنك bank name داخل الـ class.
  * قم بعمل جهازين atm.
  * عدل على دالة السحب withdraw, لتظهر اسم البنك اولاً.

* ## كيف سيكون شكل الـ output للبرنامج ؟

  إذا كتبنا هذا الكود:
  ```
  balance1 = 500
  balance2 = 1000

  atm1 = ATM(balance1, "Smart Bank")
  atm2 = ATM(balance2, "Baraka Bank")

  atm1.withdraw(277)
  atm1.withdraw(800)

  atm2.withdraw(100)
  atm2.withdraw(2000)
  ```

  سيكون الناتج output:

  ```
  Welcome to Smart Bank
  Current balance = 500
  ==================================
  give 100
  give 100
  give 50
  give 10
  give 10
  give 5
  give 2
  ==================================
  Welcome to Smart Bank
  Current balance = 223
  ==================================
  Can't give you all this money !!
  ==================================
  Welcome to Baraka Bank
  Current balance = 1000
  ==================================
  give 100
  ==================================
  Welcome to Baraka Bank
  Current balance = 900
  ==================================
  Can't give you all this money !!
  ==================================
  ```

* ## كيفية تسليم الحل ؟

  قم بالتعديل على atm.py السابق, ثم ارفع التحديثات على حسابك في GitHub في نفس المستودع (repository).

  بإمكانك تسليم الحل في هذا الموضوع:

  https://macdiscussions.udacity.com/t/10-classes/90671

* ## لا تفسد المتعة :smile::

  في حال كان حلك جاهز قم برفعه على حسابك في GitHub في التوقيت المطلوب.

  في حال لديك أي استفسارات, بإمكانك طرحها هنا وسأكون سعيد بالإجابة عليها :wink:

  #### أتمنى الفائدة والتوفيق للجميع!