#### السلام عليكم أصدقائي,

* ### فهرس المواضيع السابقة:

  https://macdiscussions.udacity.com/t/topic/86623

* ### مالذي قمنا بعمله say_hello ؟
  ```
  @app.route("/SayHello/<name>")
  def say_hello(name):
      return f"Hello {name}"
  ```

  * #### قمنا بعمل controller action يقوم باستقبال HTTP GET request.

  * #### ماهو الـ HTTP GET request ؟
     حينما تقوم بفتح صفحة قوقل:
     > www.google.com

     فأنت ببساطة تطلب من **المتصفح أن يقوم بعمل طلب HTTP GET** إلى سيرفر قوقل, وهو بدوره يرجع لك بيانات صفحة قوقل !

     أي أنه ببساطة **طلب لجلب البيانات**.

  * #### هل يوجد أنواع أخرى من الـ requests ؟

     نعم, يوجد لدينا POST أيضاً, وهو يقوم **بوضع البيانات** بدلاً من جلبها.

    ويوجد أيضاً PUT و DELETE وغيرها... لا تهمنا الآن.

* ### أين الواجهة الرسومية للموقع ؟

  * #### كيف سنقوم بها ؟

     سنقوم بعمل الـ view هذه المرة باستعمال لغتي HTML و CSS.

  * #### ماهي الـ view ؟

     ببساطة هي ما سيراه المستخدم ويتعامل معه... أي أنها الواجهة الرسومية (User Interface - UI) للموقع.

     لأننا نتبع نمط MVC.

  * #### ماهو MVC Pattern ؟

    هو فقط نمط لتصميم المشروع, يجعل الأمور مرتبة أكثر... بدلاً من خلط كل شيء في ملف واحد (كما يقوم بها أغلب مبرمجي php :smile:)

  * #### حرف M من MVC:

    تشير إلى الـ Models التي قمنا بعملها (Member class & Post class).

  * #### حرف V من MVC:
    تشير إلى الـ views التي سنقوم بعملها باستخدام HTML و CSS.

  * #### حرف C:
    تشير إلى Controller, هل تذكر دالة say_hello ؟

    تعتبر هذه الدالة controller action (أي جزء من الـ controller). أي أن الـ controller هو المسؤول عن استقبال الطلبات requests ثم يقوم بإرجاع نتيجة مثل hello mohammed عند طلب:
    > http://127.0.0.1:5000/SayHello/mohammed

  * #### تعتمد Flask تسمية أخرى للـ MVC:

     يجب الإنتباه على اختلاف المسميات في Flask, **بحيث لدينا template و view**, بدلاً view و controller
     >**M**odel ( M ) = Model
       **V**iew ( V ) = Template
       **C**ontroller ( C ) = View

* ### ماهي HTML و CSS ؟

  هي لغتين تستعمل في تصميم صفحات المواقع, **سهلة جداً** كونها فقط تحتاج منك أن تتخيل الصفحة التي تقوم برسمها.

  يجدر الإشارة أن HTML **ليست لغة برمجة** وإنما Markup language, و CSS هي لغة styling لعمل ستايل على كود الـ HTML التي كتبته.

  قام **الأستاذ محمد الحكيم المتخصص** في قسم تطوير واجهات الويب Front-End بعمل ورشة سهلة التتبع (تابعتها لأراجع الأساسيات عندي :smile:) :
  https://macdiscussions.udacity.com/t/topic/74682

  استغرق مني قرائتها كلها **أقل من نصف ساعة**... أي أنه بإمكانك قرائتها والتطبيق هنا :wink: 

  كمطور full-stack ليس عليك أن تتقن تصميم الصفحات وإنما تعلم الأساسيات, لتعمل مع المطورين الآخرين بدون مشاكل.
  لأن المجال front-end كبير جداً, مثل مجال back-end !

* ### ماهي النتيجة المطلوبة منك ؟

  بإمكانك أن تقوم بتصميم بسيط جداً للصفحة الرئيسية (index) التي في الـ wireframe خاصتك.. بالنسبة لي قمت بعمل شيء بسيط جداً كمثال:
  ![image|690x425](image-1.png)


* ### كيف سأعرض صفحة الـ html باستعمال flask ؟

  * #### أولاً قم بإضافة flask إلى مشروع forums (في حالة كنت تستعمل virtual environment).

  * #### هل نحتاج لأي import ؟
     نعم سنحتاج لإضافة render_template:
     ```
     from flask import Flask, render_template
     ```

  * #### ماذا عن ارجاع الصفحة ؟
     فقط قم بعمل return render_template بهذا الشكل:
     ```
     @app.route("/")
     @app.route("/index")
     def home():
         return render_template("index.html")
     ```

     بهذا الشكل نحن نخبره بأن يعرض ملف index.html عندما يقوم باستعراض الصفحة:
     > http://127.0.0.1:5000

     أو:
     > http://127.0.0.1:5000/index/

  * #### أين هي صفحة index.html ؟

    قم بعمل مجلد اسمه templates ثم اكتب فيه ملف index.html.

* ### كيف سننظم المشروع ؟

  * #### هل نحتاج تغيير ترتيب الملفات وأسمائها ؟

     نعم, تحتاج أن تغير اسم ملف main.py إلى tests.py لأنه يقوم بعمل testing :smile:

     بإمكانك اتباع هذا الـ structure لتنظيم مشروعك:
      ![image|465x267](image-2.png)


* ### ماهي المهمة المطلوبة ؟

  * قم بإضافة flask إلى مشروع forums (في حال كنت تستعمل virtual environment).
  * قم بترتيب المشروع كما شرحنا بالأعلى.
  * أنشأ مجلد templates.
  * اكتب ملف index.html داخل المجلد templates.
  * قم بعمل تصميم بسيط لأول wireframe صنعته (الصفحة الرئيسية)... لا داعي لتضييع وقت طويل في التصميم :wink:
  * ارجع صفحة index من دالة home.  

* ### ملحق:

  * #### شرح أساسيات HTML و CSS:
     https://macdiscussions.udacity.com/t/topic/74682

  * #### أنواع الـ HTTP requests:
     https://www.w3schools.com/tags/ref_httpmethods.asp

 * ### كيفية تسليم الحل ؟

    ارفع التحديثات على حسابك في GitHub في نفس المستودع (repository), **بالتعديل على نفس الملفات**.

    بإمكانك تسليم الحل في هذا الموضوع:
    https://macdiscussions.udacity.com/t/28-views/114958

* ### لا تفسد المتعة :smile::

  في حال كان حلك جاهز قم برفعه على حسابك في GitHub في التوقيت المطلوب.

  في حال لديك أي استفسارات, بإمكانك طرحها هنا وسأكون سعيد بالإجابة عليها :wink:

  #### أتمنى الفائدة والتوفيق للجميع!